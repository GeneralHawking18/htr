# change to list chars of your dataset or use default vietnamese chars
vocab: 'aAàÀảẢãÃáÁạẠăĂằẰẳẲẵẴắẮặẶâÂầẦẩẨẫẪấẤậẬbBcCdDđĐeEèÈẻẺẽẼéÉẹẸêÊềỀểỂễỄếẾệỆfFgGhHiIìÌỉỈĩĨíÍịỊjJkKlLmMnNoOòÒỏỎõÕóÓọỌôÔồỒổỔỗỖốỐộỘơƠờỜởỞỡỠớỚợỢpPqQrRsStTuUùÙủỦũŨúÚụỤưƯừỪửỬữỮứỨựỰvVwWxXyYỳỲỷỶỹỸýÝỵỴzZ0123456789!"#$%&''()*+,-./:;<=>?@[\]^_`{|}~ '

# cpu, cuda, cuda:0
device: cpu 
gpus: 0 

seq_modeling: transformer
transformer:  
    d_model: 768
    nhead: 8
    num_encoder_layers: 6
    num_decoder_layers: 6
    dim_feedforward: 2048
    max_seq_length: 32
    pos_dropout: 0.1
    trans_dropout: 0.1

optimizer:
    max_lr: 0.0003 
    pct_start: 0.1

trainer:
    batch_size: 2
    print_every: 10
    valid_every: 400
    iters: 100000
    # where to save our model for prediction
    export: ./weights/transformerocr.pth
    checkpoint: # ./checkpoint/transformerocr_checkpoint.pth
    log: ./train.log
    # null to disable compuate accuracy, or change to number of sample to enable validiation while training
    metrics: null

dataset:    
    # name of your dataset
    name: data
    # path to annotation and image
    data_root: /content/ocr/training_data/new_train
    train_annotation: /content/drive/MyDrive/HUST/ai_hackathon/ocr/htr/vietocr/data/train.txt
    valid_annotation: /content/drive/MyDrive/HUST/ai_hackathon/ocr/htr/vietocr/data/val.txt
    # resize image to 32 height, larger height will increase accuracy
    image_height: 32
    image_min_width: 32
    image_max_width: 128 

dataloader:
    num_workers: 3
    pin_memory: True

aug:
    image_aug: true
    masked_language_model: true

predictor:
    # disable or enable beamsearch while prediction, use beamsearch will be slower
    beamsearch: False

quiet: False 

pretrain: 
    id_or_url: 1nTKlEog9YFK74kPyX0qLwCWi60_YHHk4
    md5: efcabaa6d3adfca8e52bda2fd7d2ee04
    cached: /tmp/tranformerorc.pth

# url or local path
weights: https://drive.google.com/uc?id=1nTKlEog9YFK74kPyX0qLwCWi60_YHHk4

backbone: convnext_v1_small
cnn:
    # pooling stride size
    ss:
        - [2, 2]
        - [2, 2]
        - [2, 1]
        - [2, 1]
        - [1, 1]         
    # pooling kernel size 
    ks:
        - [2, 2]
        - [2, 2]
        - [2, 1]
        - [2, 1]
        - [1, 1]
    # dim of ouput feature map
    hidden: 256

optimizer:
    max_lr: 0.001
    pct_start: 0.1

